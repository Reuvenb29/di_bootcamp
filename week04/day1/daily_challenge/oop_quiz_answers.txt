What is a class?
A class is a blueprint for creating objects. It defines the attributes and methods that the objects created from the class will have.

What is an instance?
An instance is a concrete object created from a class. It represents a specific "real" version of the class with actual values.

What is encapsulation?
Encapsulation is the concept of hiding the internal data of a class and only allowing access or modification through specific methods. It helps protect data from unintended interference.

What is abstraction?
Abstraction means exposing only the relevant details to the user while hiding the underlying complexity. It simplifies the interface and lets users focus on what something does, not how.

What is inheritance?
Inheritance allows a class (child) to acquire the attributes and methods of another class (parent), enabling code reuse and extension.

What is multiple inheritance?
Multiple inheritance occurs when a class inherits from more than one parent class. Python supports this, and the Method Resolution Order (MRO) determines which parent method is used.

What is polymorphism?
Polymorphism allows different classes to define methods with the same name, where each method behaves differently depending on the class. It lets you write more general and flexible code.

What is method resolution order or MRO?
MRO is the order in which Python looks for a method in a hierarchy of classes. When using multiple inheritance, MRO determines which method is chosen first.
