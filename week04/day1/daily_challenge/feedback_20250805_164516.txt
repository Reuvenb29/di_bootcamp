URL: https://github.com/Reuvenb29/di_bootcamp/blob/main/week04/day1/daily_challenge/cards.py
suggestions for improvement:
- The `shuffle` method rebuilds the deck before shuffling.  It would be more efficient to shuffle the existing deck if it's already built. Consider adding a check to avoid redundant deck creation.
- Add docstrings to methods for better clarity and understanding of their purpose and functionality.
- The `deal` method returns a string when the deck is empty.  It might be better to raise an exception (e.g., `IndexError` or a custom exception) for more robust error handling in calling functions.
Brief justification:
- correctness: The code accurately implements a `Card` class and a `Deck` class as specified. The `Deck` class does not inherit from the `Card` class, fulfilling that requirement. The `shuffle` and `deal` methods function correctly. The only minor deviation is the unnecessary rebuilding of the deck in `shuffle`, which is addressed in feedback.  The overall functionality directly addresses the chapter content.
- readability: The code is well-structured and easy to follow.  However, adding docstrings would improve readability. The naming of the methods is clear and appropriate.
- performance: The performance is good, aside from the redundant deck creation in `shuffle`. The use of list comprehensions in `_build_deck` is efficient. The `pop()` method for dealing cards is also efficient.
- security: There are no obvious security vulnerabilities in the code. The code operates within its defined scope and does not interact with external resources that could introduce vulnerabilities.

